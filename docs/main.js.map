{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.scss","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/services/git-hub.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n  <span>GitHub Online</span>\\n</mat-toolbar>\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","module.exports = \"\"","import {Component} from '@angular/core';\nimport {JwksValidationHandler, OAuthService} from 'angular-oauth2-oidc';\nimport {authConfig} from './services/git-hub.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'GitHubOnline';\n\n\n  constructor(private oauthService: OAuthService) {\n    this.configureWithNewConfigApi();\n  }\n\n\n  private configureWithNewConfigApi() {\n    this.oauthService.configure(authConfig);\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n    this.oauthService.loadDiscoveryDocumentAndTryLogin();\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {MainComponent} from './components/main/main.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatToolbarModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {GitHubService} from './services/git-hub.service';\nimport {OAuthModule} from 'angular-oauth2-oidc';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n\n\nconst appRoutes: Routes = [\n  {path: 'main', component: MainComponent},\n\n  {\n    path: '',\n    redirectTo: '/main',\n    pathMatch: 'full'\n  },\n  // { path: '**', component: PageNotFoundComponent }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    OAuthModule.forRoot(),\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false,\n        useHash: true,\n      },\n    ),\n    MatToolbarModule,\n  ],\n  providers: [\n    GitHubService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<h1 *ngIf=\\\"!name\\\">\\r\\n  Hallo\\r\\n</h1>\\r\\n<h1 *ngIf=\\\"name\\\">\\r\\n  Hallo, {{name}}\\r\\n</h1>\\r\\n\\r\\n<button class=\\\"btn btn-default\\\" (click)=\\\"login()\\\">\\r\\n  Login\\r\\n</button>\\r\\n<button class=\\\"btn btn-default\\\" (click)=\\\"logoff()\\\">\\r\\n  Logout\\r\\n</button>\\r\\n\\r\\n<div>\\r\\n  Username/Passwort zum Testen: max/geheim\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {GitHubService} from '../../services/git-hub.service';\nimport {OAuthService} from 'angular-oauth2-oidc';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(private oauthService: OAuthService) {\n  }\n\n  ngOnInit() {\n  }\n\n  public login() {\n    this.oauthService.initImplicitFlow();\n  }\n\n  public logoff() {\n    this.oauthService.logOut();\n  }\n\n  public get name() {\n    let claims: any = this.oauthService.getIdentityClaims();\n    if (!claims) return null;\n    return claims.given_name;\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {AuthConfig} from 'angular-oauth2-oidc';\n\n\n\n\n\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://github.com/login/oauth/authorize',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'a9139d0c87c6868e0554',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: null,\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubService {\n\n\n  client_id = 'a9139d0c87c6868e0554';\n\n  constructor() {\n  }\n\n\n  login() {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + encodeURI(this.client_id);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}