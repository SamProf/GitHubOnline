{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.scss","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/helpers/math.ts","webpack:///./src/app/services/git-hub.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n  <span>GitHub Online</span>\\n</mat-toolbar>\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","module.exports = \"\"","import {Component} from '@angular/core';\r\nimport {JwksValidationHandler, OAuthService} from 'angular-oauth2-oidc';\r\nimport {authConfig, GitHubService} from './services/git-hub.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'GitHubOnline';\r\n\r\n\r\n  constructor(private service: GitHubService) {\r\n    this.service.init();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {MatToolbarModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {GitHubService} from './services/git-hub.service';\r\nimport {OAuthModule} from 'angular-oauth2-oidc';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path: 'main', component: MainComponent},\r\n\r\n  {\r\n    path: '',\r\n    redirectTo: '/main',\r\n    pathMatch: 'full'\r\n  },\r\n  // { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    OAuthModule.forRoot(),\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      {\r\n        enableTracing: false,\r\n        useHash: true,\r\n      },\r\n    ),\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [\r\n    GitHubService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<button (click)=\\\"service.login()\\\">Login</button>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {GitHubService} from '../../services/git-hub.service';\r\nimport {OAuthService} from 'angular-oauth2-oidc';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor(public service: GitHubService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n\r\n}\r\n","export function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n","import {Injectable} from '@angular/core';\r\nimport {AuthConfig} from 'angular-oauth2-oidc';\r\nimport {getRandomInt} from '../helpers/math';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n\r\nexport const authConfig: AuthConfig = {\r\n\r\n  // Url of the Identity Provider\r\n  issuer: 'https://github.com/login/oauth/authorize',\r\n\r\n  // URL of the SPA to redirect the user to after login\r\n  redirectUri: window.location.origin,\r\n\r\n  // The SPA's id. The SPA is registerd with this id at the auth-server\r\n  clientId: 'a9139d0c87c6868e0554',\r\n\r\n  // set the scope for the permissions the client should request\r\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\r\n  scope: null,\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GitHubService {\r\n\r\n\r\n  client_id: string = 'a9139d0c87c6868e0554';\r\n  state: string;\r\n  code: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  init() {\r\n    this.code = this.getQueryVariable('code');\r\n    this.state = this.getQueryVariable('state') || getRandomInt(0, 99999).toString();\r\n\r\n    if (this.code) {\r\n      this.http.post('https://github.com/login/oauth/access_token', {\r\n        client_id: this.client_id,\r\n        client_secret: 'bc4cb39ccfc9462b14727235bb019ea776c7526e',\r\n        code: this.code,\r\n        state: this.state,\r\n      }, {\r\n        withCredentials: true,\r\n      },).toPromise()\r\n        .then((d) => {\r\n          console.log('ok');\r\n          console.log(d);\r\n          debugger;\r\n        })\r\n        .catch(e => {\r\n          console.log('error');\r\n          console.log(e);\r\n          debugger;\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  getQueryVariable(variable) {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split('&');\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split('=');\r\n      if (decodeURIComponent(pair[0]) == variable) {\r\n        return decodeURIComponent(pair[1]);\r\n      }\r\n    }\r\n    // console.log('Query variable %s not found', variable);\r\n  }\r\n\r\n\r\n  login() {\r\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + encodeURI(this.client_id) + '&state=' + encodeURI(this.state);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}